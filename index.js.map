{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = \"48999193-84142b43a51cfa1138f8dc0d5\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport async function fetchImages(query) {\n    try {\n        const response = await axios.get(BASE_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: \"photo\",\n                orientation: \"horizontal\",\n                safesearch: true,\n                per_page: 12\n            }\n        });\n        return response.data.hits;\n    } catch (error) {\n        console.error(\"Error while searching for images\", error);\n        return [];\n    }\n}","const gallery = document.querySelector(\".gallery\");\n\nexport function renderImages(images) {\n    gallery.innerHTML = images \n     .map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n     }) => `<li class=\"gallery-item\">\n            <a href=\"${largeImageURL}\" class=\"gallery-link\">\n             <img src=\"${webformatURL}\" class=\"gallery-img\" alt=\"${tags}\"/>\n              <div class=\"img-info\">\n              <p>Likes: ${likes}</p>\n              <p>Views: ${views}</p>\n              <p>Comments: ${comments}</p>\n              <p>Downloads: ${downloads}</p>\n              </div>\n            </a>\n           </li>`)\n     .join(\"\");\n}","import {fetchImages} from \"./js/pixabay-api\"\nimport {renderImages} from \"./js/render-functions\"\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\nconst input = document.querySelector(\".input\");\nconst loader = document.querySelector(\".loading-box\");\n\nform.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n    const query = input.value.trim();\n    if (query === \"\") {\n        iziToast.warning({\n            message: 'Please enter a keyword to search',\n        });\n        return;\n    }\n    try {\n       const images = await fetchImages(query);\n       if (images.length === 0) {\n        iziToast.error({\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n        });\n        return\n       } \n       renderImages(images);\n    } catch (error) {\n        iziToast.error({\n            message: 'Something went wrong. Please try again later.',\n          });\n       }\n})"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","gallery","renderImages","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","input","event","iziToast"],"mappings":"wvBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACrC,GAAI,CAWA,OAViB,MAAMC,EAAM,IAAIH,EAAU,CACvC,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACb,CACb,CAAS,GACe,KAAK,IACxB,OAAQE,EAAO,CACZ,eAAQ,MAAM,mCAAoCA,CAAK,EAChD,EACV,CACL,CCtBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE1C,SAASC,EAAaC,EAAQ,CACjCF,EAAQ,UAAYE,EAClB,IAAI,CAAC,CACH,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAW;AAAA,uBACYL,CAAa;AAAA,yBACXD,CAAY,8BAA8BE,CAAI;AAAA;AAAA,0BAE7CC,CAAK;AAAA,0BACLC,CAAK;AAAA,6BACFC,CAAQ;AAAA,8BACPC,CAAS;AAAA;AAAA;AAAA,iBAGtB,EACX,KAAK,EAAE,CACb,CCnBA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,QAAQ,EAC9B,SAAS,cAAc,cAAc,EAEpDD,EAAK,iBAAiB,SAAU,MAAOE,GAAU,CAC7CA,EAAM,eAAc,EACpB,MAAMf,EAAQc,EAAM,MAAM,KAAI,EAC9B,GAAId,IAAU,GAAI,CACdgB,EAAS,QAAQ,CACb,QAAS,kCACrB,CAAS,EACD,MACH,CACD,GAAI,CACD,MAAMX,EAAS,MAAMN,EAAYC,CAAK,EACtC,GAAIK,EAAO,SAAW,EAAG,CACxBW,EAAS,MAAM,CACX,QAAS,0EACrB,CAAS,EACD,MACA,CACDZ,EAAaC,CAAM,CACrB,MAAe,CACZW,EAAS,MAAM,CACX,QAAS,+CACrB,CAAW,CACH,CACR,CAAC"}